// Это - вариант под произвольный массив и под заполнение строками - как в условии задачи - с лидирующими нулями : 

// Задача 62. Напишите программу, которая заполнит спирально массив 4 на 4. 
// Например, на выходе получается вот такой массив:
// 01 02 03 04
// 12 13 14 05
// 11 16 15 06
// 10 09 08 07

string[,] SpiralMatrix(int N, int M)
{
    string[,] result = new string[N, M]; // массив под результат заполнения
    int S = (N * M);
    int R = 0; // определяем разрядность максимального числа в массиве 
    while (S > 0)
    {
        R++;
        S /= 10;
    }
    int istart = 0, istop = 0, jstart = 0, jstop = 0; // точки конца сторон заполняемого прямоугольника 

    int k = 0; // счетчик для заполнения матрицы, предел  = n*m , начальное значение - по условию задачи = 0
    int i = 0; // строки 
    int j = 0; // столбцы 

    while (k < N * M) // пока счетчик не достигнет максимума - то есть конца заполнения . Если k = 1 поставить k <= N * M
    {
        result[i, j] = k.ToString("D"+R);
       
     // первый элемент понятен 
        if (i == istart && j < M - jstop - 1) // идем вправо пока не дойдем до последнего столбца jstop (-1 потому что размер массива больше индекса)
            j++;
        else if (j == M - jstop - 1 && i < N - istop - 1) // далее по крайнему  столбцу меняем строку вниз до крайней нижней  istop 
            i++;
        else if (i == N - istop - 1 && j > jstart) // далее идем по нижней строке к началу массива до минимального столбца jstart 
            j--;
        else // остается только двигаться ввверх по строке - пока она не достигнет стартовой точки istart 
            i--;

        if ((i == istart + 1) && (j == jstart) && (jstart != M - jstop - 1)) // если мы в левой верхней точке заполняемого прямоугольника и не на последней строке - уменьшаем зону обхода 
        {
            istart++;
            istop++;
            jstart++;
            jstop++;
        }
        k++;
    }

    return result;
}

//Ввод данных - через массив из двух элементов
int[] ReadInt(string text)
{
    System.Console.Write(text);
    return Array.ConvertAll(Console.ReadLine()!.Split(","), int.Parse); // раскладка строки на массив с разделителем запятой и переводом в int 
}

// Печать двумерного текстового массива 
void PrintMatrix(string[,] matrix)
{
    for (int i = 0; i < matrix.GetLength(0); i++)
    {
        for (int j = 0; j < matrix.GetLength(1); j++)
        {
            System.Console.Write(matrix[i, j] + "\t");
        }
        System.Console.WriteLine();
    }
}

//...................................................................................

int[] size = ReadInt("Задайте количество строк и столбцов  массива через запятую: ");
string[,] matrix = SpiralMatrix(size[0], size[1]);

PrintMatrix(matrix);
